// Custom test step which is processed by `SimpleMessageTestStepProcessor`
name ("User (\w+) is waiting for request from (\w+)") {
    id = step2
    execution = async
    receiveFrom = ${2}
    validate {
        status = "success"
    }
}

name ("User .* sends the message to (\w+)") {
    id = step3
    receiver = ${1}
    message {
        toCustomFormat() {
            id = get(step1).values.id
            userName = get(step1).values.name
            score = get(step1).values.score
        }
    }
}

name ("User (\w+) received a valid response from (\w+)") {
    values {
        score = get(step1).values.score
    }
    validate {
        get(step2_result, 50, 100) {
            originalRequest [
                // originalRequest is a Map but will be converted toString when using function 'match'
                $.match(".*score=" + ${score} + ".*"),
                // and use contains on the values of the Map
                $.contains(${2})
            ]
            originalRequest.rawData = "00001: " + ${2} + " (" + ${score} + ")"  // this value is generated by 'toCustomFormat' function
            receivedBy = ${1}
            receivedFrom = ${2}
            status = "success"
        }
    }
}

