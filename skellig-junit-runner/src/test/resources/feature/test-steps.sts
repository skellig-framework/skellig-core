name ("User (\w+) prepares a message with score (\w+)") {
    id = step1
    variables {
        id = "00001"
        name = ${1}
        score = ${2}
    }
}

name ("The user sends the message to (\w+)") {
    id = step2
    receiver = ${1}
    message {
        toCustomFormat {
            id = get(step1).variables.id
            userName = get(step1).variables.name
            score = get(step1).variables.score
        }
    }
}

name ("User (\w+) receives valid response from (\w+)") {
    variables {
      // get function with extraction cannot be embedded into regex-comparator at the moment
      // so we assign it here in the 'score' var
        score = get(step1).variables.score
    }
    validate {
        get(step2_result){
            originalRequest.toCustomFormat [
                $.match(".*score=" + ${score} + ".*"),
                $.contains(${2})
            ]
            receivedBy = ${1}
            status = "success"
        }
    }
}

name ("Send a message with if statement") {
    id = if_test_1

    variables {
       part1 {
           f2 = 1
           f3 = 11
       }
        part2 {
            f2 = 2
            f3 = 22
        }
    }
    receiver = user1

    message {
        f1 = 0
        f2 = if(${num} == 1, ${part1}, ${part2})
    }
}

name ("Validate test with if statement") {
    validate {
      // enclose this keyword in quotes to check whether it still works
       get(if_test_1_result){
          // do not enclose `=` in quotes and check if it works
            originalRequest.toString() [
                $.contains("f2=" + ${expected_f2}),
                $.contains("f3=" + ${expected_f3})
            ]
            status = "success"
       }
    }
}

name ("Check result after log in test step file") {
    validate {
      // `log1` test is from TestStepDefs class
        get(log1_result).match("Log record: result") = true
    }
}