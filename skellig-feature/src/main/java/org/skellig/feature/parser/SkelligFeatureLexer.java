package org.skellig.feature.parser;// Generated from SkelligFeature.g4 by ANTLR 4.13.1

import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.ATN;
import org.antlr.v4.runtime.atn.ATNDeserializer;
import org.antlr.v4.runtime.atn.LexerATNSimulator;
import org.antlr.v4.runtime.atn.PredictionContextCache;
import org.antlr.v4.runtime.dfa.DFA;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class SkelligFeatureLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		FEATURE=1, SCENARIO=2, GIVEN=3, WHEN=4, THEN=5, AND=6, STAR=7, EXAMPLES=8, 
		BEFORE_FEATURE=9, BEFORE_TEST_SCENARIO=10, AFTER_FEATURE=11, AFTER_TEST_SCENARIO=12, 
		PIPE=13, TAG=14, TEXT=15, NEWLINE=16, COMMENT=17, WS=18;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"FEATURE", "SCENARIO", "GIVEN", "WHEN", "THEN", "AND", "STAR", "EXAMPLES", 
			"BEFORE_FEATURE", "BEFORE_TEST_SCENARIO", "AFTER_FEATURE", "AFTER_TEST_SCENARIO", 
			"PIPE", "TAG", "TEXT", "NEWLINE", "COMMENT", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'Feature:'", "'Scenario:'", "'Given'", "'When'", "'Then'", "'And'", 
			"'*'", "'Examples:'", "'Before Feature:'", "'Before Test Scenario:'", 
			"'After Feature:'", "'After Test Scenario:'", "'|'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "FEATURE", "SCENARIO", "GIVEN", "WHEN", "THEN", "AND", "STAR", 
			"EXAMPLES", "BEFORE_FEATURE", "BEFORE_TEST_SCENARIO", "AFTER_FEATURE", 
			"AFTER_TEST_SCENARIO", "PIPE", "TAG", "TEXT", "NEWLINE", "COMMENT", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public SkelligFeatureLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "SkelligFeature.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0012\u00c8\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\b\u0001"+
		"\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001"+
		"\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001"+
		"\f\u0001\r\u0001\r\u0004\r\u00a7\b\r\u000b\r\f\r\u00a8\u0001\u000e\u0004"+
		"\u000e\u00ac\b\u000e\u000b\u000e\f\u000e\u00ad\u0001\u000f\u0003\u000f"+
		"\u00b1\b\u000f\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0010"+
		"\u0001\u0010\u0005\u0010\u00b9\b\u0010\n\u0010\f\u0010\u00bc\t\u0010\u0001"+
		"\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0004\u0011\u00c3"+
		"\b\u0011\u000b\u0011\f\u0011\u00c4\u0001\u0011\u0001\u0011\u0000\u0000"+
		"\u0012\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006"+
		"\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e"+
		"\u001d\u000f\u001f\u0010!\u0011#\u0012\u0001\u0000\u0004\u0003\u0000\t"+
		"\n\r\r  \u0004\u0000\t\n\r\r  ||\u0002\u0000\n\n\r\r\u0002\u0000\t\t "+
		" \u00cc\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000"+
		"\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000"+
		"\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000"+
		"\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000"+
		"\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000"+
		"\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000"+
		"\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000"+
		"\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000"+
		"!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0001%\u0001"+
		"\u0000\u0000\u0000\u0003.\u0001\u0000\u0000\u0000\u00058\u0001\u0000\u0000"+
		"\u0000\u0007>\u0001\u0000\u0000\u0000\tC\u0001\u0000\u0000\u0000\u000b"+
		"H\u0001\u0000\u0000\u0000\rL\u0001\u0000\u0000\u0000\u000fN\u0001\u0000"+
		"\u0000\u0000\u0011X\u0001\u0000\u0000\u0000\u0013h\u0001\u0000\u0000\u0000"+
		"\u0015~\u0001\u0000\u0000\u0000\u0017\u008d\u0001\u0000\u0000\u0000\u0019"+
		"\u00a2\u0001\u0000\u0000\u0000\u001b\u00a4\u0001\u0000\u0000\u0000\u001d"+
		"\u00ab\u0001\u0000\u0000\u0000\u001f\u00b0\u0001\u0000\u0000\u0000!\u00b4"+
		"\u0001\u0000\u0000\u0000#\u00c2\u0001\u0000\u0000\u0000%&\u0005F\u0000"+
		"\u0000&\'\u0005e\u0000\u0000\'(\u0005a\u0000\u0000()\u0005t\u0000\u0000"+
		")*\u0005u\u0000\u0000*+\u0005r\u0000\u0000+,\u0005e\u0000\u0000,-\u0005"+
		":\u0000\u0000-\u0002\u0001\u0000\u0000\u0000./\u0005S\u0000\u0000/0\u0005"+
		"c\u0000\u000001\u0005e\u0000\u000012\u0005n\u0000\u000023\u0005a\u0000"+
		"\u000034\u0005r\u0000\u000045\u0005i\u0000\u000056\u0005o\u0000\u0000"+
		"67\u0005:\u0000\u00007\u0004\u0001\u0000\u0000\u000089\u0005G\u0000\u0000"+
		"9:\u0005i\u0000\u0000:;\u0005v\u0000\u0000;<\u0005e\u0000\u0000<=\u0005"+
		"n\u0000\u0000=\u0006\u0001\u0000\u0000\u0000>?\u0005W\u0000\u0000?@\u0005"+
		"h\u0000\u0000@A\u0005e\u0000\u0000AB\u0005n\u0000\u0000B\b\u0001\u0000"+
		"\u0000\u0000CD\u0005T\u0000\u0000DE\u0005h\u0000\u0000EF\u0005e\u0000"+
		"\u0000FG\u0005n\u0000\u0000G\n\u0001\u0000\u0000\u0000HI\u0005A\u0000"+
		"\u0000IJ\u0005n\u0000\u0000JK\u0005d\u0000\u0000K\f\u0001\u0000\u0000"+
		"\u0000LM\u0005*\u0000\u0000M\u000e\u0001\u0000\u0000\u0000NO\u0005E\u0000"+
		"\u0000OP\u0005x\u0000\u0000PQ\u0005a\u0000\u0000QR\u0005m\u0000\u0000"+
		"RS\u0005p\u0000\u0000ST\u0005l\u0000\u0000TU\u0005e\u0000\u0000UV\u0005"+
		"s\u0000\u0000VW\u0005:\u0000\u0000W\u0010\u0001\u0000\u0000\u0000XY\u0005"+
		"B\u0000\u0000YZ\u0005e\u0000\u0000Z[\u0005f\u0000\u0000[\\\u0005o\u0000"+
		"\u0000\\]\u0005r\u0000\u0000]^\u0005e\u0000\u0000^_\u0005 \u0000\u0000"+
		"_`\u0005F\u0000\u0000`a\u0005e\u0000\u0000ab\u0005a\u0000\u0000bc\u0005"+
		"t\u0000\u0000cd\u0005u\u0000\u0000de\u0005r\u0000\u0000ef\u0005e\u0000"+
		"\u0000fg\u0005:\u0000\u0000g\u0012\u0001\u0000\u0000\u0000hi\u0005B\u0000"+
		"\u0000ij\u0005e\u0000\u0000jk\u0005f\u0000\u0000kl\u0005o\u0000\u0000"+
		"lm\u0005r\u0000\u0000mn\u0005e\u0000\u0000no\u0005 \u0000\u0000op\u0005"+
		"T\u0000\u0000pq\u0005e\u0000\u0000qr\u0005s\u0000\u0000rs\u0005t\u0000"+
		"\u0000st\u0005 \u0000\u0000tu\u0005S\u0000\u0000uv\u0005c\u0000\u0000"+
		"vw\u0005e\u0000\u0000wx\u0005n\u0000\u0000xy\u0005a\u0000\u0000yz\u0005"+
		"r\u0000\u0000z{\u0005i\u0000\u0000{|\u0005o\u0000\u0000|}\u0005:\u0000"+
		"\u0000}\u0014\u0001\u0000\u0000\u0000~\u007f\u0005A\u0000\u0000\u007f"+
		"\u0080\u0005f\u0000\u0000\u0080\u0081\u0005t\u0000\u0000\u0081\u0082\u0005"+
		"e\u0000\u0000\u0082\u0083\u0005r\u0000\u0000\u0083\u0084\u0005 \u0000"+
		"\u0000\u0084\u0085\u0005F\u0000\u0000\u0085\u0086\u0005e\u0000\u0000\u0086"+
		"\u0087\u0005a\u0000\u0000\u0087\u0088\u0005t\u0000\u0000\u0088\u0089\u0005"+
		"u\u0000\u0000\u0089\u008a\u0005r\u0000\u0000\u008a\u008b\u0005e\u0000"+
		"\u0000\u008b\u008c\u0005:\u0000\u0000\u008c\u0016\u0001\u0000\u0000\u0000"+
		"\u008d\u008e\u0005A\u0000\u0000\u008e\u008f\u0005f\u0000\u0000\u008f\u0090"+
		"\u0005t\u0000\u0000\u0090\u0091\u0005e\u0000\u0000\u0091\u0092\u0005r"+
		"\u0000\u0000\u0092\u0093\u0005 \u0000\u0000\u0093\u0094\u0005T\u0000\u0000"+
		"\u0094\u0095\u0005e\u0000\u0000\u0095\u0096\u0005s\u0000\u0000\u0096\u0097"+
		"\u0005t\u0000\u0000\u0097\u0098\u0005 \u0000\u0000\u0098\u0099\u0005S"+
		"\u0000\u0000\u0099\u009a\u0005c\u0000\u0000\u009a\u009b\u0005e\u0000\u0000"+
		"\u009b\u009c\u0005n\u0000\u0000\u009c\u009d\u0005a\u0000\u0000\u009d\u009e"+
		"\u0005r\u0000\u0000\u009e\u009f\u0005i\u0000\u0000\u009f\u00a0\u0005o"+
		"\u0000\u0000\u00a0\u00a1\u0005:\u0000\u0000\u00a1\u0018\u0001\u0000\u0000"+
		"\u0000\u00a2\u00a3\u0005|\u0000\u0000\u00a3\u001a\u0001\u0000\u0000\u0000"+
		"\u00a4\u00a6\u0005@\u0000\u0000\u00a5\u00a7\b\u0000\u0000\u0000\u00a6"+
		"\u00a5\u0001\u0000\u0000\u0000\u00a7\u00a8\u0001\u0000\u0000\u0000\u00a8"+
		"\u00a6\u0001\u0000\u0000\u0000\u00a8\u00a9\u0001\u0000\u0000\u0000\u00a9"+
		"\u001c\u0001\u0000\u0000\u0000\u00aa\u00ac\b\u0001\u0000\u0000\u00ab\u00aa"+
		"\u0001\u0000\u0000\u0000\u00ac\u00ad\u0001\u0000\u0000\u0000\u00ad\u00ab"+
		"\u0001\u0000\u0000\u0000\u00ad\u00ae\u0001\u0000\u0000\u0000\u00ae\u001e"+
		"\u0001\u0000\u0000\u0000\u00af\u00b1\u0005\r\u0000\u0000\u00b0\u00af\u0001"+
		"\u0000\u0000\u0000\u00b0\u00b1\u0001\u0000\u0000\u0000\u00b1\u00b2\u0001"+
		"\u0000\u0000\u0000\u00b2\u00b3\u0005\n\u0000\u0000\u00b3 \u0001\u0000"+
		"\u0000\u0000\u00b4\u00b5\u0005/\u0000\u0000\u00b5\u00b6\u0005/\u0000\u0000"+
		"\u00b6\u00ba\u0001\u0000\u0000\u0000\u00b7\u00b9\b\u0002\u0000\u0000\u00b8"+
		"\u00b7\u0001\u0000\u0000\u0000\u00b9\u00bc\u0001\u0000\u0000\u0000\u00ba"+
		"\u00b8\u0001\u0000\u0000\u0000\u00ba\u00bb\u0001\u0000\u0000\u0000\u00bb"+
		"\u00bd\u0001\u0000\u0000\u0000\u00bc\u00ba\u0001\u0000\u0000\u0000\u00bd"+
		"\u00be\u0007\u0002\u0000\u0000\u00be\u00bf\u0001\u0000\u0000\u0000\u00bf"+
		"\u00c0\u0006\u0010\u0000\u0000\u00c0\"\u0001\u0000\u0000\u0000\u00c1\u00c3"+
		"\u0007\u0003\u0000\u0000\u00c2\u00c1\u0001\u0000\u0000\u0000\u00c3\u00c4"+
		"\u0001\u0000\u0000\u0000\u00c4\u00c2\u0001\u0000\u0000\u0000\u00c4\u00c5"+
		"\u0001\u0000\u0000\u0000\u00c5\u00c6\u0001\u0000\u0000\u0000\u00c6\u00c7"+
		"\u0006\u0011\u0000\u0000\u00c7$\u0001\u0000\u0000\u0000\u0006\u0000\u00a8"+
		"\u00ad\u00b0\u00ba\u00c4\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}